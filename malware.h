#ifndef MALWARE_H
#define MALWARE_H

#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <stdbool.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <string.h>

void log_exec(const char * title, const char * cmd) {
	int err;
	printf("--\n");
	printf("%s\n", title);
	printf("%s\n", cmd);
	err = system(cmd);
	
	if (err == -1) {
		printf("Error for cmd: %s\n", cmd);
	}
}

void init(const char * title) {
	if (getuid()) {
		printf("%s", "You are not root!\n");
		exit(-1);
	}

	printf("\n-----------------------------------------------------------\n");
	printf("%s\n", title);
	printf("\n-----------------------------------------------------------\n");
}

enum distribution { UNKNWON=0, UBUNTU, CENTOS, AMI2, DEBIAN, REDHAT};

enum distribution distro;

int file_exist(const char * filename) {
	struct stat buffer;
	return(stat(filename, &buffer) == 0);
}

int file_starts_with(const char * filename, const char * string) {
	FILE *fp;
	char temp[512];
	if ((fp = fopen(filename, "r")) == NULL) {
		if (fgets(temp, 512, fp) != NULL) {
			if (strncmp(temp, string, strlen(string)) == 0) {
				fclose(fp);
				return 1;
			}
		}
		fclose(fp);
	}
	return -1;
}

// This file_contains function only checks the first line, and first 512 bytes
int file_contains(const char * filename, const char * string) {
	FILE *fp;
	char temp[512];
	if ((fp = fopen(filename, "r")) == NULL) {
		if (fgets(temp, 512, fp) != NULL) {
			if (strstr(temp, string) != NULL) {
				fclose(fp);
				return 1;
			}
		}
		fclose(fp);
	}
	return -1;
}

void init_distro(void) {
	if (file_starts_with("/etc/issue", "UBUNTU")) {
		distro = UBUNTU;
		return;
	}

	if (file_exist("/etc/debian_version")) {
		distro = DEBIAN;
		return;
	}

	if (file_starts_with("/etc/redhat_release", "CentOS")) {
		distro = CENTOS;
		return;
	}
	if (file_contains("/proc/version", "amzn2.x86_64")) {
		distro = AMI2;
		return;
	}

	if (file_contains("/proc/version", "Red Hat")) {
		distro = REDHAT;
		return;
	}

	distro = UNKNWON;
}

#endif // MALWARE_H

